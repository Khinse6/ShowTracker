// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShowTracker.Api.Data;

#nullable disable

namespace ShowTracker.Api.Data.Migrations
{
    [DbContext(typeof(ShowStoreContext))]
    [Migration("20250924142122_SeedDatabase")]
    partial class SeedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A young boy disappears, revealing a mystery in the town.",
                            EpisodeNumber = 1,
                            ReleaseDate = new DateOnly(2016, 7, 15),
                            SeasonId = 1,
                            Title = "Chapter One: The Vanishing"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The early reign of Queen Elizabeth II begins.",
                            EpisodeNumber = 1,
                            ReleaseDate = new DateOnly(2016, 11, 4),
                            SeasonId = 2,
                            Title = "Wolferton Splash"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Introduction to the Bridgerton family and London high society.",
                            EpisodeNumber = 1,
                            ReleaseDate = new DateOnly(2020, 12, 25),
                            SeasonId = 3,
                            Title = "Diamond of the First Water"
                        });
                });

            modelBuilder.Entity("Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReleaseDate = new DateOnly(2016, 7, 15),
                            SeasonNumber = 1,
                            ShowId = 1
                        },
                        new
                        {
                            Id = 2,
                            ReleaseDate = new DateOnly(2016, 11, 4),
                            SeasonNumber = 1,
                            ShowId = 2
                        },
                        new
                        {
                            Id = 3,
                            ReleaseDate = new DateOnly(2020, 12, 25),
                            SeasonNumber = 1,
                            ShowId = 3
                        });
                });

            modelBuilder.Entity("Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A group of kids uncover supernatural mysteries in their small town.",
                            ReleaseDate = new DateOnly(2016, 7, 15),
                            Title = "Stranger Things"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Chronicles the life of Queen Elizabeth II from the 1940s onward.",
                            ReleaseDate = new DateOnly(2016, 11, 4),
                            Title = "The Crown"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Wealthy families navigate romance and scandal in Regency-era London.",
                            ReleaseDate = new DateOnly(2020, 12, 25),
                            Title = "Bridgerton"
                        });
                });

            modelBuilder.Entity("Episode", b =>
                {
                    b.HasOne("Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("Season", b =>
                {
                    b.HasOne("Show", "Show")
                        .WithMany("Seasons")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Season", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("Show", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
